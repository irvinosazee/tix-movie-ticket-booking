// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Movie {
  id          String      @id @default(cuid())
  title       String
  description String
  posterUrl   String
  duration    Int         // in minutes
  genre       String
  rating      String      // PG-13, R, etc.
  imdbRating  Float?
  releaseYear Int?
  showtimes   Showtime[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("movies")
}

model Theater {
  id        String      @id @default(cuid())
  name      String      @unique
  capacity  Int
  type      String      // "standard", "imax", "premium"
  showtimes Showtime[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("theaters")
}

model Showtime {
  id             String    @id @default(cuid())
  movieId        String
  theaterId      String
  date           String
  time           String
  price          Float
  availableSeats Int
  movie          Movie     @relation(fields: [movieId], references: [id], onDelete: Cascade)
  theater        Theater   @relation(fields: [theaterId], references: [id], onDelete: Cascade)
  seats          Seat[]
  bookings       Booking[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@map("showtimes")
}

model Seat {
  id         String    @id @default(cuid())
  showtimeId String
  row        String
  number     Int
  isBooked   Boolean   @default(false)
  showtime   Showtime  @relation(fields: [showtimeId], references: [id], onDelete: Cascade)
  bookings   Booking[] @relation("BookingSeats")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([showtimeId, row, number])
  @@map("seats")
}

model Booking {
  id            String    @id @default(cuid())
  showtimeId    String
  customerName  String
  customerEmail String
  totalAmount   Float
  showtime      Showtime  @relation(fields: [showtimeId], references: [id], onDelete: Cascade)
  seats         Seat[]    @relation("BookingSeats")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("bookings")
}
